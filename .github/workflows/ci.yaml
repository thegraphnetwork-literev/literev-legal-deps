name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]

jobs:
  check-branch:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: check-pr-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}

  linter:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: literev-legal
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Linter
        run: |
          pre-commit install
          pre-commit run --all-files

  publish:
    strategy:
      fail-fast: false
      matrix:
        sugar_group:
          - dev
          - prod

    runs-on: ubuntu-latest

    concurrency:
      group: ci-${{ matrix.sugar_group }}-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    env:
      SUGAR_GROUP: ${{ matrix.sugar_group }}

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: literev-legal
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry check
          poetry install

      - name: Containers configuration
        run: sugar compose config

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker Image
        run: sugar compose build

      - name: Push Docker image
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: sugar compose push
